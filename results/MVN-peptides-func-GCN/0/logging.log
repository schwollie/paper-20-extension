[*] Run ID 0: seed=0, split_index=0
    Starting now: 2024-06-28 15:24:38.454568
[*] Loaded dataset 'MVN-peptides-functional' from 'OGB':
  Data(edge_index=[2, 4773974], edge_attr=[4773974, 3], x=[2344859, 9], y=[15535, 10])
  undirected: True
  num graphs: 15535
  avg num_nodes/graph: 150
  num node features: 9
  num edge features: 3
  num classes: 10
GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(5, 300)
          (2-3): 2 x Embedding(12, 300)
          (4): Embedding(10, 300)
          (5-6): 2 x Embedding(6, 300)
          (7-8): 2 x Embedding(2, 300)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
        )
      )
      (layer2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
        )
      )
      (layer3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
        )
      )
      (layer4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU()
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 10, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: False
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_encoder_num_types: 0
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: MVN-peptides-functional
  node_encoder: True
  node_encoder_bn: False
  node_encoder_name: Atom
  node_encoder_num_types: 0
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  slic_compactness: 10
  split: [0.8, 0.1, 0.1]
  split_dir: ./splits
  split_index: 0
  split_mode: standard
  task: graph
  task_type: classification_multilabel
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
device: cuda
devices: 1
example_arg: example
example_group:
  example_arg: example
gnn:
  act: relu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 5
  layers_post_mp: 1
  layers_pre_mp: 0
  msg_direction: single
  normalize_adj: False
  residual: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
gt:
  attn_dropout: 0.0
  batch_norm: True
  bigbird:
    add_cross_attention: False
    attention_type: block_sparse
    block_size: 3
    chunk_size_feed_forward: 0
    hidden_act: relu
    is_decoder: False
    layer_norm_eps: 1e-06
    max_position_embeddings: 128
    num_random_blocks: 3
    use_bias: False
  dim_hidden: 64
  dropout: 0.0
  full_graph: True
  gamma: 1e-05
  layer_norm: False
  layer_type: SANLayer
  layers: 3
  n_heads: 8
  pna_degrees: []
  residual: True
mem:
  inplace: False
metric_agg: argmax
metric_best: ap
model:
  edge_decoding: dot
  graph_pooling: mean
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
name_tag: 
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.001
  batch_accumulation: 1
  clip_grad_norm: False
  lr_decay: 0.1
  max_epoch: 500
  min_lr: 1e-05
  momentum: 0.9
  num_warmup_epochs: 50
  optimizer: adamW
  reduce_factor: 0.5
  schedule_patience: 20
  scheduler: reduce_on_plateau
  steps: [30, 60, 90]
  weight_decay: 0.0
out_dir: results/MVN-peptides-func-GCN
posenc_ElstaticSE:
  dim_pe: 16
  enable: False
  kernel:
    times: []
    times_func: range(10)
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_EquivStableLapPE:
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  raw_norm_type: none
posenc_HKdiagSE:
  dim_pe: 16
  enable: False
  kernel:
    times: []
    times_func: 
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_LapPE:
  dim_pe: 16
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_LapPEVec:
  dim_pe: 16
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_RWSE:
  dim_pe: 16
  enable: False
  kernel:
    times: []
    times_func: 
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_SignNet:
  dim_pe: 16
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  phi_hidden_dim: 64
  phi_out_dim: 4
  post_layers: 0
  raw_norm_type: none
print: both
round: 5
run_dir: results/MVN-peptides-func-GCN/0
run_id: 0
run_multiple_splits: []
seed: 0
share:
  dim_in: 9
  dim_out: 10
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  finetune: 
  freeze_pretrained: False
  iter_per_epoch: 32
  mode: custom
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
wandb:
  entity: kludge
  name: 
  project: gtblueprint
  use: False
Num parameters: 508210
Start from epoch 0
train: {'epoch': 0, 'time_epoch': 15.91995, 'eta': 7944.05482, 'eta_hours': 2.20668, 'loss': 0.5338399, 'lr': nan, 'params': 508210, 'time_iter': 0.18729, 'accuracy': 0.16463, 'ap': 0.18376, 'auc': 0.52842, 'trivial_loss': 0.7516854915219376}
...computing epoch stats took: 0.09s
val: {'epoch': 0, 'time_epoch': 1.90054, 'loss': 0.43684612, 'lr': 0, 'params': 508210, 'time_iter': 0.10003, 'accuracy': 0.16482, 'ap': 0.263, 'auc': 0.59096}
...computing epoch stats took: 0.05s
test: {'epoch': 0, 'time_epoch': 1.95963, 'loss': 0.43659139, 'lr': 0, 'params': 508210, 'time_iter': 0.10314, 'accuracy': 0.16465, 'ap': 0.26253, 'auc': 0.60009}
...computing epoch stats took: 0.03s
> Epoch 0: took 20.0s (avg 20.0s) | Best so far: epoch 0	train_loss: 0.5338 train_ap: 0.1838	val_loss: 0.4368 val_ap: 0.2630	test_loss: 0.4366 test_ap: 0.2625
train: {'epoch': 1, 'time_epoch': 14.289, 'eta': 7522.02886, 'eta_hours': 2.08945, 'loss': 0.38358907, 'lr': nan, 'params': 508210, 'time_iter': 0.16811, 'accuracy': 0.16463, 'ap': 0.2564, 'auc': 0.59315, 'trivial_loss': 0.7516922538889854}
...computing epoch stats took: 0.04s
val: {'epoch': 1, 'time_epoch': 1.74901, 'loss': 0.36999403, 'lr': 0, 'params': 508210, 'time_iter': 0.09205, 'accuracy': 0.16482, 'ap': 0.26661, 'auc': 0.58712}
...computing epoch stats took: 0.03s
test: {'epoch': 1, 'time_epoch': 1.91074, 'loss': 0.3694728, 'lr': 0, 'params': 508210, 'time_iter': 0.10057, 'accuracy': 0.16465, 'ap': 0.26893, 'auc': 0.58353}
...computing epoch stats took: 0.03s
> Epoch 1: took 18.1s (avg 19.0s) | Best so far: epoch 1	train_loss: 0.3836 train_ap: 0.2564	val_loss: 0.3700 val_ap: 0.2666	test_loss: 0.3695 test_ap: 0.2689
train: {'epoch': 2, 'time_epoch': 14.89261, 'eta': 7471.82485, 'eta_hours': 2.07551, 'loss': 0.34183719, 'lr': nan, 'params': 508210, 'time_iter': 0.17521, 'accuracy': 0.16463, 'ap': 0.28518, 'auc': 0.63913, 'trivial_loss': 0.751696577821409}
...computing epoch stats took: 0.04s
val: {'epoch': 2, 'time_epoch': 1.72994, 'loss': 0.33546887, 'lr': 0, 'params': 508210, 'time_iter': 0.09105, 'accuracy': 0.16482, 'ap': 0.29921, 'auc': 0.64803}
...computing epoch stats took: 0.03s
test: {'epoch': 2, 'time_epoch': 1.72402, 'loss': 0.33483921, 'lr': 0, 'params': 508210, 'time_iter': 0.09074, 'accuracy': 0.16465, 'ap': 0.29887, 'auc': 0.64638}
...computing epoch stats took: 0.03s
> Epoch 2: took 18.4s (avg 18.8s) | Best so far: epoch 2	train_loss: 0.3418 train_ap: 0.2852	val_loss: 0.3355 val_ap: 0.2992	test_loss: 0.3348 test_ap: 0.2989
train: {'epoch': 3, 'time_epoch': 14.81208, 'eta': 7429.2913, 'eta_hours': 2.06369, 'loss': 0.32171464, 'lr': nan, 'params': 508210, 'time_iter': 0.17426, 'accuracy': 0.16463, 'ap': 0.32026, 'auc': 0.68615, 'trivial_loss': 0.751688331384772}
val: {'epoch': 3, 'time_epoch': 1.74553, 'loss': 0.32562716, 'lr': 0, 'params': 508210, 'time_iter': 0.09187, 'accuracy': 0.16482, 'ap': 0.32038, 'auc': 0.70752}
test: {'epoch': 3, 'time_epoch': 1.75277, 'loss': 0.32440248, 'lr': 0, 'params': 508210, 'time_iter': 0.09225, 'accuracy': 0.16465, 'ap': 0.32068, 'auc': 0.69974}
> Epoch 3: took 18.4s (avg 18.7s) | Best so far: epoch 3	train_loss: 0.3217 train_ap: 0.3203	val_loss: 0.3256 val_ap: 0.3204	test_loss: 0.3244 test_ap: 0.3207
train: {'epoch': 4, 'time_epoch': 14.94994, 'eta': 7411.4944, 'eta_hours': 2.05875, 'loss': 0.3078672, 'lr': nan, 'params': 508210, 'time_iter': 0.17588, 'accuracy': 0.16463, 'ap': 0.34773, 'auc': 0.71723, 'trivial_loss': 0.7516991789257867}
val: {'epoch': 4, 'time_epoch': 1.77793, 'loss': 0.30668693, 'lr': 0, 'params': 508210, 'time_iter': 0.09358, 'accuracy': 0.16482, 'ap': 0.35808, 'auc': 0.74002}
test: {'epoch': 4, 'time_epoch': 1.75389, 'loss': 0.30603034, 'lr': 0, 'params': 508210, 'time_iter': 0.09231, 'accuracy': 0.16465, 'ap': 0.35647, 'auc': 0.7476}
> Epoch 4: took 18.6s (avg 18.7s) | Best so far: epoch 4	train_loss: 0.3079 train_ap: 0.3477	val_loss: 0.3067 val_ap: 0.3581	test_loss: 0.3060 test_ap: 0.3565
train: {'epoch': 5, 'time_epoch': 14.83988, 'eta': 7385.58485, 'eta_hours': 2.05155, 'loss': 0.29663313, 'lr': nan, 'params': 508210, 'time_iter': 0.17459, 'accuracy': 0.16463, 'ap': 0.36692, 'auc': 0.73523, 'trivial_loss': 0.7516933800566112}
val: {'epoch': 5, 'time_epoch': 1.84697, 'loss': 0.29571144, 'lr': 0, 'params': 508210, 'time_iter': 0.09721, 'accuracy': 0.16482, 'ap': 0.37599, 'auc': 0.75076}
test: {'epoch': 5, 'time_epoch': 1.78724, 'loss': 0.29577583, 'lr': 0, 'params': 508210, 'time_iter': 0.09407, 'accuracy': 0.16465, 'ap': 0.36936, 'auc': 0.76103}
> Epoch 5: took 18.6s (avg 18.7s) | Best so far: epoch 5	train_loss: 0.2966 train_ap: 0.3669	val_loss: 0.2957 val_ap: 0.3760	test_loss: 0.2958 test_ap: 0.3694
train: {'epoch': 6, 'time_epoch': 15.15783, 'eta': 7385.23099, 'eta_hours': 2.05145, 'loss': 0.28612482, 'lr': nan, 'params': 508210, 'time_iter': 0.17833, 'accuracy': 0.16463, 'ap': 0.38164, 'auc': 0.75382, 'trivial_loss': 0.7516816690020077}
val: {'epoch': 6, 'time_epoch': 1.75523, 'loss': 0.30175272, 'lr': 0, 'params': 508210, 'time_iter': 0.09238, 'accuracy': 0.16482, 'ap': 0.37632, 'auc': 0.75508}
test: {'epoch': 6, 'time_epoch': 1.77454, 'loss': 0.30171779, 'lr': 0, 'params': 508210, 'time_iter': 0.0934, 'accuracy': 0.16465, 'ap': 0.36428, 'auc': 0.75492}
> Epoch 6: took 18.8s (avg 18.7s) | Best so far: epoch 6	train_loss: 0.2861 train_ap: 0.3816	val_loss: 0.3018 val_ap: 0.3763	test_loss: 0.3017 test_ap: 0.3643
train: {'epoch': 7, 'time_epoch': 15.23513, 'eta': 7385.92972, 'eta_hours': 2.05165, 'loss': 0.28056257, 'lr': nan, 'params': 508210, 'time_iter': 0.17924, 'accuracy': 0.16463, 'ap': 0.39363, 'auc': 0.76544, 'trivial_loss': 0.751685787116682}
val: {'epoch': 7, 'time_epoch': 1.78806, 'loss': 0.30396732, 'lr': 0, 'params': 508210, 'time_iter': 0.09411, 'accuracy': 0.16482, 'ap': 0.38337, 'auc': 0.76078}
test: {'epoch': 7, 'time_epoch': 1.77121, 'loss': 0.30227475, 'lr': 0, 'params': 508210, 'time_iter': 0.09322, 'accuracy': 0.16465, 'ap': 0.38143, 'auc': 0.76231}
> Epoch 7: took 18.9s (avg 18.7s) | Best so far: epoch 7	train_loss: 0.2806 train_ap: 0.3936	val_loss: 0.3040 val_ap: 0.3834	test_loss: 0.3023 test_ap: 0.3814
train: {'epoch': 8, 'time_epoch': 15.22325, 'eta': 7382.43942, 'eta_hours': 2.05068, 'loss': 0.27506521, 'lr': nan, 'params': 508210, 'time_iter': 0.1791, 'accuracy': 0.16463, 'ap': 0.40851, 'auc': 0.77746, 'trivial_loss': 0.751702580880211}
val: {'epoch': 8, 'time_epoch': 1.76671, 'loss': 0.2964295, 'lr': 0, 'params': 508210, 'time_iter': 0.09298, 'accuracy': 0.16482, 'ap': 0.40013, 'auc': 0.76954}
test: {'epoch': 8, 'time_epoch': 1.76264, 'loss': 0.29449328, 'lr': 0, 'params': 508210, 'time_iter': 0.09277, 'accuracy': 0.16465, 'ap': 0.3912, 'auc': 0.77553}
> Epoch 8: took 18.9s (avg 18.7s) | Best so far: epoch 8	train_loss: 0.2751 train_ap: 0.4085	val_loss: 0.2964 val_ap: 0.4001	test_loss: 0.2945 test_ap: 0.3912
train: {'epoch': 9, 'time_epoch': 20.34309, 'eta': 7627.47488, 'eta_hours': 2.11874, 'loss': 0.26982209, 'lr': nan, 'params': 508210, 'time_iter': 0.23933, 'accuracy': 0.16463, 'ap': 0.42296, 'auc': 0.79157, 'trivial_loss': 0.7516927972653856}
val: {'epoch': 9, 'time_epoch': 2.83677, 'loss': 0.26713198, 'lr': 0, 'params': 508210, 'time_iter': 0.1493, 'accuracy': 0.16482, 'ap': 0.43378, 'auc': 0.80348}
test: {'epoch': 9, 'time_epoch': 2.63577, 'loss': 0.26857789, 'lr': 0, 'params': 508210, 'time_iter': 0.13872, 'accuracy': 0.16465, 'ap': 0.42241, 'auc': 0.79668}
> Epoch 9: took 26.1s (avg 19.5s) | Best so far: epoch 9	train_loss: 0.2698 train_ap: 0.4230	val_loss: 0.2671 val_ap: 0.4338	test_loss: 0.2686 test_ap: 0.4224
train: {'epoch': 10, 'time_epoch': 19.40011, 'eta': 7782.33989, 'eta_hours': 2.16176, 'loss': 0.26561371, 'lr': nan, 'params': 508210, 'time_iter': 0.22824, 'accuracy': 0.16463, 'ap': 0.4343, 'auc': 0.79945, 'trivial_loss': 0.7516933157265729}
val: {'epoch': 10, 'time_epoch': 2.51548, 'loss': 0.27821043, 'lr': 0, 'params': 508210, 'time_iter': 0.13239, 'accuracy': 0.16482, 'ap': 0.41783, 'auc': 0.79138}
test: {'epoch': 10, 'time_epoch': 2.51745, 'loss': 0.27893599, 'lr': 0, 'params': 508210, 'time_iter': 0.1325, 'accuracy': 0.16465, 'ap': 0.4061, 'auc': 0.78491}
> Epoch 10: took 24.6s (avg 19.9s) | Best so far: epoch 9	train_loss: 0.2698 train_ap: 0.4230	val_loss: 0.2671 val_ap: 0.4338	test_loss: 0.2686 test_ap: 0.4224
train: {'epoch': 11, 'time_epoch': 20.4314, 'eta': 7950.10012, 'eta_hours': 2.20836, 'loss': 0.26284741, 'lr': nan, 'params': 508210, 'time_iter': 0.24037, 'accuracy': 0.16463, 'ap': 0.44049, 'auc': 0.80664, 'trivial_loss': 0.751685310997652}
val: {'epoch': 11, 'time_epoch': 2.54855, 'loss': 0.2902665, 'lr': 0, 'params': 508210, 'time_iter': 0.13413, 'accuracy': 0.16482, 'ap': 0.42138, 'auc': 0.78845}
test: {'epoch': 11, 'time_epoch': 2.89552, 'loss': 0.29271776, 'lr': 0, 'params': 508210, 'time_iter': 0.1524, 'accuracy': 0.16465, 'ap': 0.39972, 'auc': 0.78295}
> Epoch 11: took 26.1s (avg 20.4s) | Best so far: epoch 9	train_loss: 0.2698 train_ap: 0.4230	val_loss: 0.2671 val_ap: 0.4338	test_loss: 0.2686 test_ap: 0.4224
train: {'epoch': 12, 'time_epoch': 19.21407, 'eta': 8043.30454, 'eta_hours': 2.23425, 'loss': 0.26080048, 'lr': nan, 'params': 508210, 'time_iter': 0.22605, 'accuracy': 0.16463, 'ap': 0.44582, 'auc': 0.8156, 'trivial_loss': 0.751697671284049}
val: {'epoch': 12, 'time_epoch': 2.81595, 'loss': 0.27396664, 'lr': 0, 'params': 508210, 'time_iter': 0.14821, 'accuracy': 0.16482, 'ap': 0.44159, 'auc': 0.81105}
test: {'epoch': 12, 'time_epoch': 2.65497, 'loss': 0.27621984, 'lr': 0, 'params': 508210, 'time_iter': 0.13974, 'accuracy': 0.16465, 'ap': 0.4268, 'auc': 0.80854}
> Epoch 12: took 24.9s (avg 20.8s) | Best so far: epoch 12	train_loss: 0.2608 train_ap: 0.4458	val_loss: 0.2740 val_ap: 0.4416	test_loss: 0.2762 test_ap: 0.4268
train: {'epoch': 13, 'time_epoch': 20.4309, 'eta': 8162.69051, 'eta_hours': 2.26741, 'loss': 0.25796978, 'lr': nan, 'params': 508210, 'time_iter': 0.24036, 'accuracy': 0.16463, 'ap': 0.4509, 'auc': 0.81818, 'trivial_loss': 0.7516921853433699}
val: {'epoch': 13, 'time_epoch': 2.35554, 'loss': 0.25730035, 'lr': 0, 'params': 508210, 'time_iter': 0.12398, 'accuracy': 0.16482, 'ap': 0.46043, 'auc': 0.8271}
test: {'epoch': 13, 'time_epoch': 2.15379, 'loss': 0.25970697, 'lr': 0, 'params': 508210, 'time_iter': 0.11336, 'accuracy': 0.16465, 'ap': 0.44274, 'auc': 0.82225}
> Epoch 13: took 25.1s (avg 21.1s) | Best so far: epoch 13	train_loss: 0.2580 train_ap: 0.4509	val_loss: 0.2573 val_ap: 0.4604	test_loss: 0.2597 test_ap: 0.4427
train: {'epoch': 14, 'time_epoch': 20.45228, 'eta': 8264.12547, 'eta_hours': 2.29559, 'loss': 0.25410811, 'lr': nan, 'params': 508210, 'time_iter': 0.24062, 'accuracy': 0.16463, 'ap': 0.46025, 'auc': 0.82346, 'trivial_loss': 0.7516960066189096}
val: {'epoch': 14, 'time_epoch': 2.48407, 'loss': 0.27598699, 'lr': 0, 'params': 508210, 'time_iter': 0.13074, 'accuracy': 0.16482, 'ap': 0.43317, 'auc': 0.79801}
test: {'epoch': 14, 'time_epoch': 2.49503, 'loss': 0.2766858, 'lr': 0, 'params': 508210, 'time_iter': 0.13132, 'accuracy': 0.16465, 'ap': 0.42561, 'auc': 0.80065}
> Epoch 14: took 25.6s (avg 21.4s) | Best so far: epoch 13	train_loss: 0.2580 train_ap: 0.4509	val_loss: 0.2573 val_ap: 0.4604	test_loss: 0.2597 test_ap: 0.4427
